<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.khalil.ssm.blog.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.khalil.ssm.blog.entity.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_pass" property="userPass" jdbcType="VARCHAR"/>
        <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="user_url" property="userUrl" jdbcType="VARCHAR"/>
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR"/>
        <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="VARCHAR"/>
        <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP"/>
        <result column="user_last_login_time" property="userLastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="user_status" property="userStatus" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="tb">user</sql>
    <sql id="Base_Column_List">
         user_id, user_name, user_pass, user_nickname, user_email, user_url, user_avatar,
        user_last_login_ip, user_register_time, user_last_login_time, user_status
    </sql>

    <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM
        <include refid="tb"/>
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.khalil.ssm.blog.entity.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO
        <include refid="tb"/>
        (user_id, user_name, user_pass,
        user_nickname, user_email, user_url,
        user_avatar, user_last_login_ip, user_register_time,
        user_last_login_time, user_status)
        VALUES (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR},
        #{userNickname,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR},
        #{userAvatar,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP},
        #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userStatus,jdbcType=INTEGER})
    </insert>

    <update id="update" parameterType="com.khalil.ssm.blog.entity.User">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="userName != null">user_name = #{userName, jdbcType=VARCHAR}, </if>
            <if test="userPass != null">user_pass = #{userPass,jdbcType=VARCHAR},</if>
            <if test="userNickname != null">user_nickname = #{userNickname,jdbcType=VARCHAR},</if>
            <if test="userEmail != null">user_email = #{userEmail,jdbcType=VARCHAR},</if>
            <if test="userUrl != null">user_url = #{userUrl,jdbcType=VARCHAR},</if>
            <if test="userAvatar != null">user_avatar = #{userAvatar,jdbcType=VARCHAR},</if>
            <if test="userLastLoginIp != null">user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},</if>
            <if test="userRegisterTime != null">user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},</if>
            <if test="userLastLoginTime != null">user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},</if>
            <if test="userStatus != null">user_status = #{userStatus,jdbcType=INTEGER},</if>
        </set>
        WHERE user_id = #{userId, jdbcType=INTEGER}
    </update>

    <select id="listUser" parameterType="com.khalil.ssm.blog.entity.User" resultType="com.khalil.ssm.blog.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        ORDER BY `user_status` ASC
    </select>

    <select id="getUserByNameOrEmail" parameterType="String" resultType="com.khalil.ssm.blog.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            user_name=#{name} OR user_email=#{email}
        </where>
        AND user_status>0
        LIMIT 1
    </select>

    <!--根据用户名查用户-->
    <select id="getUserByName" parameterType="String" resultType="com.khalil.ssm.blog.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            user_name=#{value}
        </where>
        limit 1
    </select>

    <!--根据Email查用户-->
    <select id="getUserByEmail" parameterType="String" resultType="com.khalil.ssm.blog.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            user_email=#{value}
        </where>
        limit 1
    </select>

</mapper>