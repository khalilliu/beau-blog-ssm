<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.khalil.ssm.blog.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.khalil.ssm.blog.entity.Article">
        <id column="article_id" property="articleId" jdbcType="INTEGER" />
        <result column="article_user_id" property="articleUserId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_view_count" property="articleViewCount" jdbcType="VARCHAR"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="tb">article</sql>
    <sql id="Base_Column_list">
        article_id, article_user_id, article_title, article_content,article_summary, article_view_count, article_comment_count, article_like_count, article_create_time,
        article_update_time, article_is_comment, article_status, article_order
    </sql>

    <select id="listAllNotWithContent" resultType="com.khalil.ssm.blog.entity.Article">
        SELECT
        article_id, article_user_id, article_title, article_create_time
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
        ORDER BY article_id DESC
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        article.*
        FROM
        <include refid="tb"/>
        <where>
            <if test="status != null">
                article.article_status = #{status} AND
            </if>
            <if test="keywords != null">
                article.article_title LIKE concat(concat('%', #{(keywords}), '%') AND
            </if>
            <if test="userId != null">
                article.article_user_id = #{userId} AND
            </if>
            <if test="categoryId != null">
                 article.article_id IN (
                    SELECT article_category_ref.article_id FROM article_category_ref
                    WHERE article_category_ref.category_id = #{categoryId}
                ) AND
            </if>
            <if test="tagId != null">
                article.article_id IN (
                    SELECT article_tag_ref.article_id FROM article_tag_ref
                    WHERE article_tag_ref.tag_id = #{tagId}
                ) AND
            </if>
            1 = 1
        </where>
        ORDER BY `article`.`article_order` DESC , `article`.`article_id` DESC
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        DELETE FROM
        <include refid="tb"/>
        WHERE article_id = #{articleId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteBatch" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        <if test="ids != null">
            WHERE article_id IN
            <foreach collection="ids" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
    </delete>

    <insert id="insert" parameterType="com.khalil.ssm.blog.entity.Article" useGeneratedKeys="true" keyProperty="articleId">
        INSERT INTO
        <include refid="tb"/>
        (article_user_id, article_title,
        article_view_count, article_comment_count,
        article_like_count, article_create_time, article_update_time,
        article_is_comment, article_status, article_order,
        article_content, article_summary)
        VALUES ()
    </insert>

    <update id="update" parameterType="com.khalil.ssm.blog.entity.Article">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="articleUserId != null">article_user_id = #{articleUserId, jdbcType=INTEGER},</if>
            <if test="articleTitle != null">article_title=#{articleTitle, jdbcType=VARCHAR},</if>
            <if test="articleViewCount != null">article_view_count = #{articleViewCount,jdbcType=INTEGER},</if>
            <if test="articleCommentCount != null">article_comment_count = #{articleCommentCount,jdbcType=INTEGER},</if>
            <if test="articleLikeCount != null">article_like_count = #{articleLikeCount,jdbcType=INTEGER},</if>
            <if test="articleCreateTime != null">article_create_time = #{articleCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleUpdateTime != null">article_update_time = #{articleUpdateTime,jdbcType=TIMESTAMP},</if>
            <if test="articleIsComment != null">article_is_comment = #{articleIsComment,jdbcType=INTEGER},</if>
            <if test="articleStatus != null">article_status = #{articleStatus,jdbcType=INTEGER},</if>
            <if test="articleOrder != null">article_order = #{articleOrder,jdbcType=INTEGER},</if>
            <if test="articleContent != null">article_content = #{articleContent,jdbcType=LONGVARCHAR},</if>
            <if test="articleSummary != null">article_summary = #{articleSummary,jdbcType=VARCHAR},</if>
        </set>
        WHERE article_id = #{articleId, jdbcType=INTEGER}
    </update>

<!--    获取文章总数-->
    <select id="countArticle" resultType="Integer">
        SELECT COUNT(*) FROM
        <include refid="tb"/>
        WHERE article_status = 1
    </select>
<!--    获取文章留言总数-->
    <select id="countArticleComment" resultType="Integer">
        SELECT SUM(article_comment_count)
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
    </select>
<!--    统计文章总访问量-->
    <select id="countArticleView" resultType="Integer">
        SELECT SUM(article_view_count)
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
    </select>

<!--    获取所有文章-->
    <select id="listArticle" resultType="com.khalil.ssm.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE article_status = 1
        ORDER BY article_status ASC, article_order DESC, article_id DESC
    </select>

<!--    通过status或id查询文章列表-->
    <select id="getArticleByStatusAndId" resultType="com.khalil.ssm.blog.entity.Article">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="status != null">
                article_status = #{status} AND
            </if>
            article_id = #{id}
        </where>
    </select>

<!--    分页查询文章-->

<!--    获取访问量多的文章-->

<!--    获取下一篇文章-->

<!--    获取上一篇文章-->

<!--    获取随机文章-->

<!--    获取评论较多的文章-->


</mapper>